#!/bin/bash
# Script to built arm toolchain: binutils, gcc, newlib, gdb
# Automatically download versions needed for building if needed

#-------------------------------------------------------------------------------
# settings
#-------------------------------------------------------------------------------

TARGET="arm-none-eabi"
SRC="$HOME/arm-toolchain-sources"
OUT="$HOME/opt/arm-none-eabi"

BINUTILS=binutils-2.22
GCC=gcc-4.6.2
NEWLIB=newlib-1.19.0

#if not set it will not be assembled
GMP=gmp-4.2
#GMP=gmp-5.0.1
MPFR=mpfr-2.3.1
#MPFR=mpfr-3.0.0
MPC=mpc-0.8.0
#MPC=mpc-0.8.2
#GDB=gdb-6.8

#THREADS=6

mkdir -vp $SRC
cd $SRC

#-------------------------------------------------------------------------------
# downloading
#-------------------------------------------------------------------------------

echo
echo "Downloading source packages. This may take a while."
echo

# if already present don't download
if ! [ -f "$BINUTILS/install-sh" ]; then
	if ! [ -f "$BINUTILS.tar.bz2" ]; then
		echo; echo "Downloading the binutils ..."; echo
		wget -c http://ftp.gnu.org/gnu/binutils/$BINUTILS.tar.bz2
	fi
fi

if ! [ -f "$GCC/install-sh" ]; then
	if ! [ -f "$GCC.tar.bz2" ]; then
		echo; echo "Downloading the gcc ..."; echo
		wget -c ftp://ftp.gnu.org/gnu/gcc/$GCC/$GCC.tar.bz2
	fi
fi

if [ "$GMP" != "" ]; then
	if ! [ -f "$GMP/install-sh" ]; then
		if ! [ -f "$GMP.tar.bz2" ]; then
			echo; echo "Downloading the gmp ..."; echo
			wget -c ftp://ftp.gmplib.org/pub/$GMP/$GMP.tar.bz2
		fi
	fi
fi

if [ "$MPFR" != "" ]; then
	if ! [ -f "$MPFR/install-sh" ]; then
		if ! [ -f "$MPFR.tar.bz2" ]; then
			echo; echo "Downloading the mpfr ..."; echo
			wget -c http://mpfr.loria.fr/$MPFR/$MPFR.tar.bz2
		fi
	fi
fi

if [ "$MPC" != "" ]; then
	if ! [ -f "$MPC/install-sh" ]; then
		if ! [ -f "$MPC.tar.gz" ]; then
			echo; echo "Downloading the mpc ..."; echo
			wget -c http://www.multiprecision.org/mpc/download/$MPC.tar.gz
		fi
	fi
fi

if ! [ -f "$NEWLIB/install-sh" ]; then
	if ! [ -f "$NEWLIB.tar.gz" ]; then
		echo; echo "Downloading the newlib ..."; echo
		wget -c ftp://sources.redhat.com/pub/newlib/$NEWLIB.tar.gz
	fi
fi

if [ "$GDB" != "" ]; then
	if ! [ -f "$GDB/install-sh" ]; then
		if ! [ -f "$GDB.tar.bz2" ]; then
			echo; echo "Downloading the gdb ..."; echo
			wget -c ftp://ftp.gnu.org/gnu/gdb/$GDB.tar.bz2
		fi
	fi
fi

echo
echo "All packeges are present"
echo

#-------------------------------------------------------------------------------
# building
#-------------------------------------------------------------------------------

echo "Starting Build..."
echo

rm -rf build/*
mkdir -vp build

#-------------------------------------------------------------------------------
# binutils
#-------------------------------------------------------------------------------


if ! [ -f "$SRC/$BINUTILS/install-sh" ]; then
	echo
	echo "Extracting binutils"
	echo
	tar xfj $SRC/$BINUTILS.tar.bz2
fi

echo
echo "Building binutils"
echo

cd build
../$BINUTILS/configure --target=$TARGET --prefix=$OUT \
--enable-interwork --enable-multilib --with-gnu-as \
--with-gnu-ld --disable-nls --disable-werror
make
make install

cd ..
rm -rf build/*

#-------------------------------------------------------------------------------
# gcc
#-------------------------------------------------------------------------------

echo
echo "Building GCC pass 1"
echo

if ! [ -f "$SRC/$GCC/install-sh" ]; then
	echo
	echo "Extracting binutils"
	echo
	tar xfj $SRC/$GCC.tar.bz2
fi

cd build
../$GCC/configure --target=$TARGET --prefix=$OUT --enable-interwork \
--enable-multilib --enable-languages="c" --with-newlib \
--without-headers --disable-shared --disable-nls --with-gnu-as --with-gnu-ld

make all-gcc
make install-gcc

cd ..
rm -rf build/*





rm -rf build
